% adaugare_nou(L : list, Rez : list, E : integer) (i, o, i) [(o, i, i)]

...


adaugare_nou([ [H | X] | T2], [ [H | X] | Rez], E) :- H < E, !, 
													  adaugare_nou(T2, Rez, E).
adaugare_nou([ [H | X] | T2], [ [E, 1], [H | X] | T2], E) :- H > E, !.
										 

% incrementare_existent(L : list, Rez : list, E : integer) (i, o, i) [(o, i, i)]
incrementare_existent([ [H | X] | T2], [ [H | X] | Rez], E) :- H < E, !, 
																  incrementare_existent(T2, Rez, E).
incrementare_existent([ [H, H2 | X] | T2], [ [H, New | X] | T2], E) :- H =:= E, !,
																	   New is H2+1.
														
(DEFUN modificare_lista_aparitii(L E) 
	((NULL (incrementare_existent L E)) ())
)
modificare_lista_aparitii(L, E, Rez) :- incrementare_existent(L, Rez, E) ; adaugare_nou(L, Rez, E).
														
(DEFUN creare_perechi(L)
	(COND 
		((NULL L) NIL)
		(T (modificare_lista_aparitii (CAR L) (creare_perechi (CDR L) Rez)))
	)
)
		